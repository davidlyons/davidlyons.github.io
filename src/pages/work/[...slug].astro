---
import { type CollectionEntry, getCollection } from 'astro:content';
import BaseLayout from '@/layouts/BaseLayout.astro';
import FormattedDate from '@/components/FormattedDate.astro';
import { components } from '@/components/mdx/index.astro';
import { iconMap } from '@/consts';
import { Icon } from 'astro-icon/components';

// This is a dynamic route that generates a page for every Markdown file in src/content/
// Read more about dynamic routes and this `getStaticPaths` function in the Astro docs:
// https://docs.astro.build/en/core-concepts/routing/#dynamic-routes
export async function getStaticPaths() {
  const work = await getCollection('work');
  return work.map((entry) => ({
    params: { slug: entry.slug },
    props: entry,
  }));
}

type Props = CollectionEntry<'work'>;

const entry = Astro.props;
const { title, description, pubDate, tags } = entry.data;
const { Content } = await entry.render();
---

<BaseLayout {...entry.data}>
  <div class="grid-cols-12 lg:grid">
    <div class="lg:col-span-3">
      <h1 class="mb-1 text-4xl font-medium dark:text-white">{title}</h1>
      <p class="opacity-50">
        <FormattedDate date={pubDate} />
      </p>
      {description && <p class="mb-12">{description}</p>}
      <div class="mb-2 text-lg dark:text-white">Tools used:</div>
      <ul class="mb-4 list-none">
        {
          tags.map((tag) => (
            <li>
              <span class="mb-px inline-block rounded-md px-2 py-1 text-xs font-medium dark:bg-gray-500 dark:text-white">
                {iconMap[tag] && <Icon name={iconMap[tag]} size={16} class="me-1" />} {tag}
              </span>
            </li>
          ))
        }
      </ul>
    </div>
    <div class="lg:col-span-8 lg:col-start-5">
      <Content components={components} />
    </div>
  </div>
</BaseLayout>
